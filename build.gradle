buildscript {
    repositories {
        mavenCentral()
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'

//temporary jacoco fix for java8
jacoco {
    toolVersion = "0.7.0.201403182114"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "1.5-SNAPSHOT"
group = 'com.suissoft'

jar {
    manifest {
        attributes 'Implementation-Title': 'suissoft-model', 'Implementation-Version': version
    }
}

eclipse {
    classpath {
       downloadSources=true
    }
}

import org.gradle.plugins.ide.eclipse.model.SourceFolder 
eclipse.classpath.file {
    beforeMerged { classpath -> 
        classpath.entries.clear()
    }
    whenMerged {  cp -> 
        cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/main") }*.output = "build/classes/main" 
        cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/test/") }*.output = "build/classes/test" 
        cp.entries.removeAll { it.kind == "output" }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.hibernate:hibernate-core:4.3.0.Final'
    compile 'org.hibernate:hibernate-entitymanager:4.3.0.Final'
    compile 'joda-time:joda-time:2.3'
    compile 'joda-time:joda-time-hibernate:1.3'
    compile 'com.h2database:h2:1.3.174'
//    compile 'org.jboss.weld:weld-core:2.1.0.Final'
    compile 'org.jboss.weld:weld-core:2.2.0.Beta1'
    compile 'com.google.inject:guice:4.0-beta4'
    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile 'org.jglue.cdi-unit:cdi-unit:2.2.1'
	testRuntime 'javax.servlet:javax.servlet-api:3.1.0'
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
